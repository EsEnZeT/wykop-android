plugins {
    id("com.starter.application.android") version("0.28.0")
    id("org.jetbrains.kotlin.kapt") version("1.5.10")
}
apply plugin: 'kotlin-android-extensions'

android {
    defaultConfig {
        applicationId "io.github.feelfreelinux.wykopmobilny"

        def credentialsPropertiesFile = rootProject.file("credentials.properties")
        def credentialsProperties = new Properties()
        credentialsProperties.load(new FileInputStream(credentialsPropertiesFile))

        buildConfigField 'String', 'APP_SECRET', credentialsProperties['apiSecret']
        buildConfigField 'String', 'APP_KEY', credentialsProperties['apiKey']
        buildConfigField 'String', 'GOOGLE_KEY', credentialsProperties['googleKey']
        resValue 'string', 'GOOGLE_API_KEY', credentialsProperties['googleKey']
    }

    signingConfigs {
        ci {
            keyAlias "key0"
            keyPassword System.getenv('CI_KEYSTORE_PASSWORD')
            storeFile file('../ci-release-keystore.jks')
            storePassword System.getenv('CI_KEYSTORE_PASSWORD')
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
        resValues = true
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    lintOptions {
        disable("UnknownNullness")
    }
}

kotlinter {
    experimentalRules = false
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Support library
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "android.arch.work:work-runtime:1.0.1"
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.takisoft.preferencex:preferencex:1.1.0'
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.devbrackets.android:exomedia:4.3.0'
    def exoplayerVersion = "2.9.6"
    implementation "com.google.android.exoplayer:exoplayer:$exoplayerVersion"
    implementation "com.google.android.exoplayer:extension-okhttp:$exoplayerVersion"
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Utils
    implementation "org.ocpsoft.prettytime:prettytime:4.0.4.Final"
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.pavelsikun:material-seekbar-preference:2.3.0'
    implementation 'com.github.feelfreelinux:Slidr:2.2.1'

    // Retrofit
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation 'pl.droidsonroids:jspoon:1.3.0'
    implementation 'pl.droidsonroids.retrofit2:converter-jspoon:1.3.0'

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
    implementation "io.reactivex.rxjava2:rxjava:2.2.0"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.1'
    implementation 'org.jetbrains:markdown:0.2.1'

    // AppUpdater
    implementation "com.github.javiersantos:AppUpdater:2.6.3"

    // Dagger 2
    def daggerVersion = "2.36"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    // Glide
    def glide = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide"

    // Android-Job
    implementation "com.evernote:android-job:1.2.6"
    implementation 'com.github.suckgamony.RapidDecoder:library:7cdfca47fa'

    // Unit tests
    testImplementation "org.mockito:mockito-core:3.9.0"
    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0')
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
}

tasks.named("detekt") {
    baseline = file("$rootDir/detekt-baseline.xml")
}

tasks.register("detektProjectBaseline", io.gitlab.arturbosch.detekt.DetektCreateBaselineTask) {
    description = "Overrides current baseline."
    ignoreFailures.set(true)
    buildUponDefaultConfig.set(true)
    setSource(files(rootDir))
    config.setFrom(tasks.getByName("detekt").config)
    baseline.set(file("$rootDir/detekt-baseline.xml"))
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/resources/**")
    exclude("**/build/**")
}
