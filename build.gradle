import com.android.build.gradle.internal.tasks.databinding.DataBindingMergeDependencyArtifactsTask
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("com.starter.config")
    id("com.starter.versioning")
    id("com.osacky.doctor") version("0.7.3")
    id("com.starter.easylauncher") version("5.0.0") apply(false)
    id "com.github.ben-manes.versions" version "0.42.0"
}

commonConfig {
    javaFilesAllowed false
    javaVersion JavaVersion.VERSION_11
}

allprojects {
    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs = freeCompilerArgs +
                "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi" +
                "-Xopt-in=kotlin.RequiresOptIn" +
                "-Xopt-in=kotlin.time.ExperimentalTime" +
                "-Xopt-in=kotlinx.coroutines.FlowPreview"
        }
    }
    ["com.android.library", "com.android.application"].forEach {
        pluginManager.withPlugin(it) {
            tasks.withType(DataBindingMergeDependencyArtifactsTask).configureEach {
                outputs.cacheIf { false }
            }
            android.packagingOptions {
                exclude 'META-INF/*.kotlin_module'
            }
        }
    }
    pluginManager.withPlugin("com.android.library") {
        android {
            namespace "io.github.wykopmobilny${path.replace(":", ".").replace("-", "_")}"
        }
        android.variantFilter {
            ignore = buildType.name != "debug"
        }
    }
    pluginManager.withPlugin("com.android.application") {
        android.buildTypes.configureEach {
            setMatchingFallbacks("debug")
        }
    }
    configurations.configureEach {
        resolutionStrategy.eachDependency {
            if (requested.group == "org.checkerframework" && requested.name != "checker-compat-qual") {
                useVersion(libs.versions.mavencentral.checker.get())
                because("https://github.com/google/ExoPlayer/issues/10007")
            }
        }
    }
}
